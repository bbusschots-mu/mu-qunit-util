[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/index.js",
    "content": "import is from 'is_js';\n\n/**\n * The exported namespace.\n *\n * All public functions are exported via this namespace.\n *\n * @type {Object}\n * @property {Map<string, Map<string, DummyData>>} allDummyData - The library\n * of dummy data organised by type and period-separated tag path.\n * \n * This data structure is generated by the {@link refreshDummyData} function.\n */\nconst muQUnitUtil = {\n    /**\n     * The library of dummy data organised by type and period-separated tag\n     * path.\n     *\n     * This data structure is generated by the `refreshDummyData()` function.\n     *\n     * @type {Map<string, Map<string, DummyData>>}\n     * @see {@link refreshDummyData}\n     */\n    allDummyData: {}\n};\n\n/**\n * A dummy data definition encapsulating the piece of data itself, a\n * description, and one or more tags.\n *\n * @private\n */\nclass DummyData{\n    \n    /**\n     * @param {string} desc - a description of the piece of data.\n     * @param {string[]} tags - zero or more tags to associate with the data.\n     * @param {*} val - the actual piece of data.\n     * @param {string} [type] - the data's type.\n     * @param {string} [tagPath] - the data's tag path.\n     */\n    constructor(desc, tags, val, type, tagPath){\n        if(!(is.string(desc) && is.not.empty(desc))) throw new TypeError('description must be a non-empty string');\n        if(!(is.array(tags) && is.all.string(tags))) throw new TypeError('tags must be an array of strings');\n        if(is.not.undefined(type) && is.not.string(type)) throw new TypeError('if p, type must be a string');\n        this._description = desc;\n        this._tags = [...tags];\n        this._value = val;\n        this._tagLookup = {};\n        this._type = type;\n        this._tagPath = tagPath;\n        for(const t of this._tags){\n            this._tagLookup[t] = true;\n        }\n    }\n    \n    /*\n     * @type {string}\n     */\n    get description(){\n        return this._description;\n    }\n    \n    /**\n     * @type {string[]}\n     */\n    get tags(){\n        return this._tags;\n    }\n    \n    /**\n     * @type {*}\n     */\n    get value(){\n        return this._value;\n    }\n    \n    /**\n     * @type {string|undefined}\n     */\n    get type(){\n        return this._type;\n    }\n    \n    /**\n     * @type {string|undefined}\n     */\n    get tagPath(){\n        return this._tagPath;\n    }\n    \n    /**\n     * @return {boolean}\n     */\n    hasTag(t){\n        if(is.not.string(t)) throw new TypeError('tag must be a string');\n        return this._tagLookup[t] ? true : false;\n    }\n}\n\n/**\n * Refresh the dummy data.\n *\n * @alias refreshDummyData\n * @param {...function(): Map<string, Map<string, Array>>} dataGenerators -\n * references to zero or more functions that return additional dummy data\n * beyond the default set. The generators must return a data structure\n * containing three-element arrays indexed by tag path indexed by type. The\n * first element in the arrays must be a textual description of the piece\n * of dummy data, the second a list of additional tags as an array of\n * strings (the tags that make up the tag path should not be included), and\n * the dummy data value. E.g.:\n *\n * ```\n * function muDummyDataGen(){\n *     return {\n *         number: {\n *             'mu.studentNumber': ['a student number', ['integer'], 99999999]\n *         },\n *         string: {\n *             'mu.studentNumber': ['a student number string', ['integer', 'numeric'], '99999999']\n *         }\n *     };\n * }\n * ```\n */\nfunction refreshDummyData(...dataGenerators){\n    // The data structure defining the default dummy data - see the relevant\n    // page in the manual section of the docs for details.\n    const rawData = {\n        'boolean': {\n            'true': ['true', ['basic'], true],\n            'false': ['false', ['falsy'], false]\n        },\n        'number': {\n            'zero': ['the number zero', ['integer', 'falsy'], 0],\n            'digit': ['a single-digit number', ['integer'], 7],\n            'integer': ['a positive integer', ['basic'], 12345],\n            'integer.2digit': ['a 2-digit number', [], 42],\n            'integer.3digit': ['a 3-digit number', [], 123],\n            'integer.4digit': ['a 4-digit number', [], 1982],\n            'uts': ['a numeric Unix Time-stamp', ['datetime', 'integer'], 1529660265],\n            'integer.negative': ['a negative integer', [], -12345],\n            'float': ['a positive floating point number', [], 3.14],\n            'float.negative': ['a negative floating point number', [], -3.14]\n        },\n        'string': {\n            'empty': ['an empty string', ['falsy'], ''],\n            'word': ['a single-word string', ['basic'], 'boogers'],\n            'line': ['a single-line string', [], 'boogers and snot'],\n            'multiline': ['a multi-line string', [''], 'boogers\\nsnot\\nbogeys'],\n            'zero': ['the character 0', ['integer', 'numeric'], '0'],\n            'digit': ['a single-digit string', ['integer', 'numeric'], '7'],\n            'integer': ['a positive integer string', ['numeric'], '12345'],\n            'integer.2digit': ['a 2-digit numeric string', ['numeric'], '42'],\n            'integer.3digit': ['a 3-digit numeric string', ['numeric'], '123'],\n            'integer.4digit': ['a 4-digit numeric string', ['numeric'], '1982'],\n            'uts': ['a Unix Time-stamp string', ['datetime', 'numeric', 'integer'], '1529660265'],\n            'iso8601': ['an ISO8601 date & time string', ['datetime'], '2018-06-22T09:37:45z'],\n            'rfc2822': ['an RFC2822 date & time string', ['datetime'], 'Fri, 22 Jun 2018 09:37:45 +0000'],\n            'jsdate': ['a JavaScript date & time string', ['datetime'], '2018-06-22T09:37:45.000Z'],\n            'integer.negative': ['a negative integer string', ['numeric'], '-12345'],\n            'float': ['a floating point numeric string', ['numeric'], '3.14'],\n            'float.negative': ['a negative floating point numeric string', ['numeric'], '-3.14']\n        },\n        'array': {\n            'empty': ['an empty array', ['object'], []],\n            'basic': ['an array of primitives', ['object', 'basic'], [true, 42, 'boogers']]\n        },\n        'function': {\n            'void': ['a void function', ['object', 'basic'], function(){}]\n        },\n        'error': {\n            'Error': ['a generic error', ['object', 'basic'], new Error('a generic error')],\n            'TypeError': ['a type error', ['object'], new TypeError('a type error')],\n            'RangeError': ['a range error', ['object'], new TypeError('a range error')]\n        },\n        'object': {\n            'null': ['null', ['empty', 'falsy', 'basic'], null],\n            'empty': ['empty object', ['plain'], {}],\n            'plain': ['a plain object', ['basic'], {a: 'b', c: 42, d: true}],\n            'jsdate': ['a date object', ['datetime'], new Date('2018-06-22T09:37:45.000Z')],\n            'jsdate.now': ['a date object', ['datetime'], new Date()]\n        },\n        'other': {\n            \"undefined\": ['undefined', ['empty', 'falsy', 'basic'], undefined]\n        }\n    };\n    const ans = {};\n    \n    // incorporate the default data\n    for(const t of Object.keys(rawData)){\n        ans[t] = {};\n        for(const tp of Object.keys(rawData[t])){\n            ans[t][tp] = new DummyData(\n                rawData[t][tp][0],\n                [...tp.split('.'), ...rawData[t][tp][1]],\n                rawData[t][tp][2],\n                t,\n                tp\n            );\n        }\n    }\n    \n    // incporporate the data from the generator functions (if any)\n    for(const genFn of dataGenerators){\n        try{\n            const extraData = genFn();\n            if(is.not.object(extraData)) throw new TypeError('generator did not return an object');\n            for(const t of Object.keys(extraData)){\n                if(is.not.object(extraData[t])) throw new TypeError(`generatedData['${t}'] is not an object`);\n                if(is.undefined(ans[t])) ans[t] = {};\n                for(const tp of Object.keys(extraData[t])){\n                    if(is.not.array(extraData[t][tp])) throw new TypeError(`generatedData['${t}']['${tp}'] is not an array`);\n                    if(is.not.string(extraData[t][tp][0])) throw new TypeError(`generatedData['${t}']['${tp}'][0] is not a string`);\n                    if(is.not.array(extraData[t][tp][1]) || !is.all.string(extraData[t][tp][1])) throw new TypeError(`generatedData['${t}']['${tp}'][1] is not an array of strings`);\n                    ans[t][tp] = new DummyData(\n                        extraData[t][tp][0],\n                        [...tp.split('.'), ...extraData[t][tp][1]],\n                        extraData[t][tp][2],\n                        t,\n                        tp\n                    );\n                }\n            }\n        }catch(err){\n            throw new Error(`failed to load additional data from genereator function with error: ${err.message}`);\n        }\n    }\n    \n    // store the new data set\n    muQUnitUtil.allDummyData = ans;\n}\nmuQUnitUtil.refreshDummyData = refreshDummyData;\n\n/**\n * Returns a single piece of dummy data, or, all the dummy data for a\n * given type, or all the dummy data.\n *\n * To get a single piece of dummy data pass its type and tag path as a\n * single period-separated string, e.g. `'string.word'` for the dummy data\n * with type `string` and tag path `word`, or `'number.integer.negative'`\n * for the dummy data with type `number` and tag path `integer.negative`.\n *\n * To get all the dummy data for a given type pass the type as a string,\n * e.g. `'boolean'` for all dummy boolean data.\n *\n * To get all the dummy data, simply pass `'*'`.\n *\n * When querying all the dummy data both entire sections and specific tags\n * can be excluded, and when querying all the dummy data for a sigle type\n * specific tags can be excluded.\n *\n * @param {string} path - a type, or, a type and tag path as a single\n * period-separated string, or the special value `'*'`.\n * @param {object} [opts] - an optional options object.\n * @param {string[]} [opts.excludeTypes] - a list of types to exclude when\n * requesting all dummy data (`path` is `'*'`).\n * @param {string[]} [opts.excludeTags] - a list of tags to exclude when\n * requesting all dummy data, or the dummy data for a given type.\n * @param {string[]} [opts.excludeDefinitions] - a list of individual data\n * definitions to exclude as period-separated type and tag path strings.\n * @return {DummyData[]|DummyData|undefined} Returns all the dummy data\n * for a given type, or a single piece of dummy data for a type with tag\n * path. If only a type is passed and that type does not exist an empty\n * array is returned, if the path has two or more parts and the type or\n * tag path don't exist, `undefined` is returned.\n * @throws {TypeError}\n */\nfunction dummyData(path, opts){\n    if(!(is.string(path) && is.not.empty(path))) throw new TypeError('path must be a non-empty string');\n    if(is.not.object(opts)) opts = {};\n    const pathParts = path.split('.');\n    const reqType = pathParts[0];\n    \n    // if a single piece of data or a single type is requested, and does not exist, return\n    if(reqType !== '*'){\n        if(is.not.object(muQUnitUtil.allDummyData[reqType])) return pathParts.length === 1 ? [] : undefined;\n    }\n    \n    // deal with requests for a single piece of data\n    if(pathParts.length > 1) return muQUnitUtil.allDummyData[reqType][pathParts.slice(1).join('.')];\n    \n    // deal with requests for data for one or more types\n    \n    // figure out what types to process\n    const typesToFetch = [];\n    if(reqType === '*'){\n        const typeSkipLookup = {};\n        if(is.array(opts.excludeTypes)){\n            for(const t of opts.excludeTypes) typeSkipLookup[t] = true;\n        }\n        for(const t of Object.keys(muQUnitUtil.allDummyData)){\n            if(!typeSkipLookup[t]) typesToFetch.push(t);\n        }\n    }else{\n        typesToFetch.push(reqType);\n    }\n    \n    // figure out which individual definitions to skip\n    const defSkipLookup = {};\n    if(is.array(opts.excludeDefinitions)){\n        for(const dp of opts.excludeDefinitions) defSkipLookup[dp] = true;\n    }\n    \n    // process all the requested types\n    const ans = [];\n    const doCheckTags = is.array(opts.excludeTags);\n    for(const t of typesToFetch){\n        processTypeDummyData:\n        for(const tp of Object.keys(muQUnitUtil.allDummyData[t])){\n            if(doCheckTags){\n                for(const et of opts.excludeTags){\n                    if(muQUnitUtil.allDummyData[t][tp].hasTag(et)) continue processTypeDummyData;\n                }\n            }\n            if(!defSkipLookup[`${t}.${tp}`]) ans.push(muQUnitUtil.allDummyData[t][tp]);\n        }\n    }\n    return ans;\n}\nmuQUnitUtil.dummyData = dummyData;\n\n/**\n * A function to return all dummy data except those for the given\n * types and those matching the given tags tags.\n *\n * This is a shortcut for:\n * \n * ```\n * .dummyData(\n *     '*',\n *     {\n *         excludeTypes: arguments[0],\n *         excludeTags: arguments[1],\n *         excludeDefinitions: arguments[2]\n *     }\n * )\n * ```\n *\n * @param {string[]} [excludeTypes]\n * @param {string[]} [excludeTags]\n * @param {string[]} [excludeDefinitions]\n * @return {DummyData[]}\n */\nfunction dummyDataExcept(excludeTypes, excludeTags, excludeDefinitions){\n    if(is.not.array(excludeTypes)) excludeTypes = [];\n    if(is.not.array(excludeTags)) excludeTags = [];\n    if(is.not.array(excludeDefinitions)) excludeDefinitions = [];\n    return dummyData('*', {excludeTypes, excludeTags, excludeDefinitions});\n}\nmuQUnitUtil.dummyDataExcept = dummyDataExcept;\n\n/**\n * A function to return all basic dummy data, i.e. all dummy data tagged\n * `basic`.\n *\n * This is a shortcut for `dummyDataWithAnyTag('basic')`.\n *\n * @return {DummyData[]}\n */\nfunction dummyBasicData(){\n    return dummyDataWithAnyTag('basic');\n}\nmuQUnitUtil.dummyBasicData = dummyBasicData;\n\n/**\n * A function to return all basic dummy data that's not an object, i.e. all\n * dummy data tagged `basic` that does not have either the type or tag\n * `object`.\n *\n * @return {DummyData[]}\n */\nfunction dummyBasicPrimitives(){\n    const ans = [];\n    for(const dd of dummyBasicData()){\n        if(dd.type != 'object' && !dd.hasTag('object')) ans.push(dd);\n    }\n    return ans;\n}\nmuQUnitUtil.dummyBasicPrimitives = dummyBasicPrimitives;\n\n/**\n * A function to return all basic dummy data except those for zero or more\n * given types.\n *\n * @param {...string} excludeTypes\n * @return {DummyData[]}\n */\nfunction dummyBasicDataExcept(...excludeTypes){\n    const excludeLookup = {};\n    for(const et of excludeTypes) excludeLookup[et] = true;\n    const ans = [];\n    for(const dd of dummyBasicData()){\n        if(!excludeLookup[dd.type]){\n            ans.push(dd);\n        }\n    }\n    return ans;\n}\nmuQUnitUtil.dummyBasicDataExcept = dummyBasicDataExcept;\n\n/**\n * A function to return all basic dummy primitives except those for zero or\n * more given types.\n *\n * @param {...string} excludeTypes\n * @return {DummyData[]}\n */\nfunction dummyBasicPrimitivesExcept(...excludeTypes){\n    const excludeLookup = {};\n    for(const et of excludeTypes) excludeLookup[et] = true;\n    const ans = [];\n    for(const dd of dummyBasicPrimitives()){\n        if(!excludeLookup[dd.type]){\n            ans.push(dd);\n        }\n    }\n    return ans;\n}\nmuQUnitUtil.dummyBasicPrimitivesExcept = dummyBasicPrimitivesExcept;\n\n/**\n * Returns the dummy data of one or more types.\n * \n * @param {...string} typeList\n * @return {DummyData[]}\n * @throws {TypeError}\n */\nfunction dummyDataByType(...typeList){\n    if(!is.all.string(typeList)) throw new TypeError('all specified types must be strings');\n    const ans = [];\n    for(const t of typeList){\n        if(is.object(muQUnitUtil.allDummyData[t])) ans.push(...Object.values(muQUnitUtil.allDummyData[t]));\n    }\n    return ans;\n}\nmuQUnitUtil.dummyDataByType = dummyDataByType;\n\n/**\n * Returns the dummy data matching **any** of the given tags.\n *\n * @param {...string} tagList\n * @return {DummyData[]}\n * @throws {TypeError}\n */\nfunction dummyDataWithAnyTag(...tagList){\n    if(!is.all.string(tagList)) throw new TypeError('all specified tags must be strings');\n    const ans = [];\n    for(const td of Object.values(muQUnitUtil.allDummyData)){\n        for(const dd of Object.values(td)){\n            // test if any requested tag is present\n            let anyPresent = false;\n            for(const t of tagList){\n                if(dd.hasTag(t)){\n                    anyPresent = true;\n                    break;\n                }\n            }\n            if(anyPresent) ans.push(dd);\n        }\n        \n    }\n    return ans;\n}\nmuQUnitUtil.dummyDataWithAnyTag = dummyDataWithAnyTag;\n\n/**\n * Returns the dummy data matching **all** of the given tags.\n * \n * @param {...string} tagList\n * @return {DummyData[]}\n * @throws {TypeError}\n */\nfunction dummyDataWithAllTags(...tagList){\n    if(!is.all.string(tagList)) throw new TypeError('all specified tags must be strings');\n    const ans = [];\n    for(const td of Object.values(muQUnitUtil.allDummyData)){\n        for(const dd of Object.values(td)){\n            // make sure every tag is present\n            let allPresent = true;\n            for(const t of tagList){\n                if(!dd.hasTag(t)){\n                    allPresent = false;\n                    break;\n                }\n            }\n            if(allPresent) ans.push(dd);\n        }\n    }\n    return ans;\n}\nmuQUnitUtil.dummyDataWithAllTags = dummyDataWithAllTags;\n\n// initialise the dummy data\nrefreshDummyData();\n\nexport default muQUnitUtil;",
    "static": true,
    "longname": "/Users/bbusschots/Documents/Temp/fromGitHub/mu-qunit-util/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "DummyData",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~DummyData",
    "access": "private",
    "export": false,
    "importPath": "@maynoothuniversity/mu-qunit-util/src/index.js",
    "importStyle": null,
    "description": "A dummy data definition encapsulating the piece of data itself, a\ndescription, and one or more tags.",
    "lineNumber": 33,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/index.js~DummyData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~DummyData#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "desc",
        "description": "a description of the piece of data."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "tags",
        "description": "zero or more tags to associate with the data."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "the actual piece of data."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "type",
        "description": "the data's type."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "tagPath",
        "description": "the data's tag path."
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "_description",
    "memberof": "src/index.js~DummyData",
    "static": false,
    "longname": "src/index.js~DummyData#_description",
    "access": "private",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "_tags",
    "memberof": "src/index.js~DummyData",
    "static": false,
    "longname": "src/index.js~DummyData#_tags",
    "access": "private",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "_value",
    "memberof": "src/index.js~DummyData",
    "static": false,
    "longname": "src/index.js~DummyData#_value",
    "access": "private",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "_tagLookup",
    "memberof": "src/index.js~DummyData",
    "static": false,
    "longname": "src/index.js~DummyData#_tagLookup",
    "access": "private",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "_type",
    "memberof": "src/index.js~DummyData",
    "static": false,
    "longname": "src/index.js~DummyData#_type",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "_tagPath",
    "memberof": "src/index.js~DummyData",
    "static": false,
    "longname": "src/index.js~DummyData#_tagPath",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "get",
    "name": "description",
    "memberof": "src/index.js~DummyData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~DummyData#description",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "get",
    "name": "tags",
    "memberof": "src/index.js~DummyData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~DummyData#tags",
    "access": "public",
    "description": "",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "get",
    "name": "value",
    "memberof": "src/index.js~DummyData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~DummyData#value",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "get",
    "name": "type",
    "memberof": "src/index.js~DummyData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~DummyData#type",
    "access": "public",
    "description": "",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "get",
    "name": "tagPath",
    "memberof": "src/index.js~DummyData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~DummyData#tagPath",
    "access": "public",
    "description": "",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "hasTag",
    "memberof": "src/index.js~DummyData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~DummyData#hasTag",
    "access": "public",
    "description": "",
    "lineNumber": 95,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "refreshDummyData",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~refreshDummyData",
    "access": "public",
    "export": false,
    "importPath": "@maynoothuniversity/mu-qunit-util/src/index.js",
    "importStyle": null,
    "description": "Refresh the dummy data.",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@alias",
        "tagValue": "refreshDummyData"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "...function(): Map<string, Map<string, Array>>"
        ],
        "spread": true,
        "optional": false,
        "name": "dataGenerators",
        "description": "references to zero or more functions that return additional dummy data\nbeyond the default set. The generators must return a data structure\ncontaining three-element arrays indexed by tag path indexed by type. The\nfirst element in the arrays must be a textual description of the piece\nof dummy data, the second a list of additional tags as an array of\nstrings (the tags that make up the tag path should not be included), and\nthe dummy data value. E.g.:\n\n```\nfunction muDummyDataGen(){\n    return {\n        number: {\n            'mu.studentNumber': ['a student number', ['integer'], 99999999]\n        },\n        string: {\n            'mu.studentNumber': ['a student number string', ['integer', 'numeric'], '99999999']\n        }\n    };\n}\n```"
      }
    ],
    "return": null
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "dummyData",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~dummyData",
    "access": "public",
    "export": false,
    "importPath": "@maynoothuniversity/mu-qunit-util/src/index.js",
    "importStyle": null,
    "description": "Returns a single piece of dummy data, or, all the dummy data for a\ngiven type, or all the dummy data.\n\nTo get a single piece of dummy data pass its type and tag path as a\nsingle period-separated string, e.g. `'string.word'` for the dummy data\nwith type `string` and tag path `word`, or `'number.integer.negative'`\nfor the dummy data with type `number` and tag path `integer.negative`.\n\nTo get all the dummy data for a given type pass the type as a string,\ne.g. `'boolean'` for all dummy boolean data.\n\nTo get all the dummy data, simply pass `'*'`.\n\nWhen querying all the dummy data both entire sections and specific tags\ncan be excluded, and when querying all the dummy data for a sigle type\nspecific tags can be excluded.",
    "lineNumber": 270,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "a type, or, a type and tag path as a single\nperiod-separated string, or the special value `'*'`."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "an optional options object."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.excludeTypes",
        "description": "a list of types to exclude when\nrequesting all dummy data (`path` is `'*'`)."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.excludeTags",
        "description": "a list of tags to exclude when\nrequesting all dummy data, or the dummy data for a given type."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.excludeDefinitions",
        "description": "a list of individual data\ndefinitions to exclude as period-separated type and tag path strings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DummyData[]",
        "DummyData",
        "undefined"
      ],
      "spread": false,
      "description": "Returns all the dummy data\nfor a given type, or a single piece of dummy data for a type with tag\npath. If only a type is passed and that type does not exist an empty\narray is returned, if the path has two or more parts and the type or\ntag path don't exist, `undefined` is returned."
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "dummyDataExcept",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~dummyDataExcept",
    "access": "public",
    "export": false,
    "importPath": "@maynoothuniversity/mu-qunit-util/src/index.js",
    "importStyle": null,
    "description": "A function to return all dummy data except those for the given\ntypes and those matching the given tags tags.\n\nThis is a shortcut for:\n\n```\n.dummyData(\n    '*',\n    {\n        excludeTypes: arguments[0],\n        excludeTags: arguments[1],\n        excludeDefinitions: arguments[2]\n    }\n)\n```",
    "lineNumber": 346,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "excludeTypes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "excludeTags",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "excludeDefinitions",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DummyData[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "dummyBasicData",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~dummyBasicData",
    "access": "public",
    "export": false,
    "importPath": "@maynoothuniversity/mu-qunit-util/src/index.js",
    "importStyle": null,
    "description": "A function to return all basic dummy data, i.e. all dummy data tagged\n`basic`.\n\nThis is a shortcut for `dummyDataWithAnyTag('basic')`.",
    "lineNumber": 362,
    "return": {
      "nullable": null,
      "types": [
        "DummyData[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "dummyBasicPrimitives",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~dummyBasicPrimitives",
    "access": "public",
    "export": false,
    "importPath": "@maynoothuniversity/mu-qunit-util/src/index.js",
    "importStyle": null,
    "description": "A function to return all basic dummy data that's not an object, i.e. all\ndummy data tagged `basic` that does not have either the type or tag\n`object`.",
    "lineNumber": 374,
    "return": {
      "nullable": null,
      "types": [
        "DummyData[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "dummyBasicDataExcept",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~dummyBasicDataExcept",
    "access": "public",
    "export": false,
    "importPath": "@maynoothuniversity/mu-qunit-util/src/index.js",
    "importStyle": null,
    "description": "A function to return all basic dummy data except those for zero or more\ngiven types.",
    "lineNumber": 390,
    "params": [
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "excludeTypes",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DummyData[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "dummyBasicPrimitivesExcept",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~dummyBasicPrimitivesExcept",
    "access": "public",
    "export": false,
    "importPath": "@maynoothuniversity/mu-qunit-util/src/index.js",
    "importStyle": null,
    "description": "A function to return all basic dummy primitives except those for zero or\nmore given types.",
    "lineNumber": 410,
    "params": [
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "excludeTypes",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DummyData[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "dummyDataByType",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~dummyDataByType",
    "access": "public",
    "export": false,
    "importPath": "@maynoothuniversity/mu-qunit-util/src/index.js",
    "importStyle": null,
    "description": "Returns the dummy data of one or more types.",
    "lineNumber": 430,
    "params": [
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "typeList",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DummyData[]"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "dummyDataWithAnyTag",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~dummyDataWithAnyTag",
    "access": "public",
    "export": false,
    "importPath": "@maynoothuniversity/mu-qunit-util/src/index.js",
    "importStyle": null,
    "description": "Returns the dummy data matching **any** of the given tags.",
    "lineNumber": 447,
    "params": [
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "tagList",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DummyData[]"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "dummyDataWithAllTags",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~dummyDataWithAllTags",
    "access": "public",
    "export": false,
    "importPath": "@maynoothuniversity/mu-qunit-util/src/index.js",
    "importStyle": null,
    "description": "Returns the dummy data matching **all** of the given tags.",
    "lineNumber": 475,
    "params": [
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "tagList",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DummyData[]"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "muQUnitUtil",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~muQUnitUtil",
    "access": "public",
    "export": true,
    "importPath": "@maynoothuniversity/mu-qunit-util/src/index.js",
    "importStyle": "muQUnitUtil",
    "description": "The exported namespace.\n\nAll public functions are exported via this namespace.",
    "lineNumber": 14,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Map<string, Map<string, DummyData>>"
        ],
        "spread": false,
        "optional": false,
        "name": "allDummyData",
        "description": "The library\nof dummy data organised by type and period-separated tag path.\n\nThis data structure is generated by the {@link refreshDummyData} function."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "kind": "index",
    "content": "# @maynoothuniversity/mu-qunit-util\n\nA universal module which provides utilities for use within\n[QUnit](http://qunitjs.com/) test suites for\n[Maynooth University](https://www.maynoothuniversity.ie/) (MU) JavaScript\nprojects.\n\nThis module is public purely so it can be used within MU's open source projects.\nWhile it's free for anyone to use, it's not designed to be universally useful.\n\nAPI Documentation is available at\n[bbusschots-mu.github.io/mu-qunit-util](https://bbusschots-mu.github.io/mu-qunit-util/).\n\n## Incorporation into Test Suite\n\nThis module can be used both from the CLI and in-browser.\n\n### QUnit CLI (via NodeJS)\n\nInstall the module:\n\n```\nnpm install --save-dev @maynoothuniversity/mu-qunit-util\n```\n\nTo make this module available as `u` within the test suite add\n`u:./node_modules/@maynoothuniversity/mu-qunit-util` to the `-d` flag for the\n`qunit` binary.\n\nThe following is an example Node test script from `package.json`:\n\n```\n\"test\": \"./node_modules/.bin/qunit -c SomeModule:./src/SomeModule.js -d is:./node_modules/is_js _:./node_modules/lodash u:./node_modules/@maynoothuniversity/mu-qunit-util -t ./test/tests.js\"\n```\n\n### QUnit Web Interface\n\nTo use the module within QUnit's web interface include the version of the\nmodule in the `build` folder into the page before including the test suite. This\nwill publish the module to the global variable `muQUnitUtil`. If the test suite\nis expecting the module with a shorter alias like `u` that shoudl be done using\na separate script tag.\n\n```\n<script src=\"../node_modules/@maynoothuniversity/mu-qunit-util/dist/index.js\"></script>\n<script>\n  const util = muQUnitUtil;\n</script>\n```",
    "longname": "/Users/bbusschots/Documents/Temp/fromGitHub/mu-qunit-util/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@maynoothuniversity/mu-qunit-util\",\n  \"version\": \"1.1.2\",\n  \"description\": \"Qunit utilities for use in Maynooth University projects.\",\n  \"main\": \"dist/index.js\",\n  \"module\": \"dist/index.es.js\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"scripts\": {\n    \"build\": \"./node_modules/.bin/rollup -c\",\n    \"docs\": \"./node_modules/.bin/esdoc -c ./esdoc.json\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/bbusschots-mu/mu-qunit-util.git\"\n  },\n  \"keywords\": [\n    \"JavaScript\",\n    \"QUnit\"\n  ],\n  \"author\": \"Bart Busschots\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/bbusschots-mu/mu-qunit-util/issues\"\n  },\n  \"homepage\": \"https://github.com/bbusschots-mu/mu-qunit-util#readme\",\n  \"dependencies\": {\n    \"is_js\": \"^0.9.0\"\n  },\n  \"devDependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-node\": \"^1.0.5\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"rollup\": \"^2.21.0\",\n    \"rollup-plugin-commonjs\": \"^10.1.0\",\n    \"rollup-plugin-node-resolve\": \"^5.2.0\"\n  }\n}\n",
    "longname": "/Users/bbusschots/Documents/Temp/fromGitHub/mu-qunit-util/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": false,
    "content": null,
    "longname": "",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/bbusschots/Documents/Temp/fromGitHub/mu-qunit-util/docs-manual/defaultDummyData.md",
    "name": "./docs-manual/defaultDummyData.md",
    "content": "# Default Dummy Data\n\nThe set of default dummy data is defined as a local datastructure within the\n`refreshDummyData()` function.\n\nAt the top level the data structure is organised by type. The list of types is\nloosely based on the values returned by JavaScript's `typeof` operator. The\ndummy data is grouped into the following types:\n\n* `boolean`\n* `number`\n* `string`\n* `array`\n* `function`\n* `error`\n* `object` - dummy objects that are not arrays, functions, or errors.\n* `other` - just `undefined` ATM.\n\nBelow types the dummy data is organised by *tag path*. A tag is a string with\nno spaces or other punctuation, and a tag path is a string of tags separated by\ndots. E.g. `integer.positive` is a tag path consisting of the tags `integer` and\n`positive`.\n\nThe individual pieces of dummy data are represented as three-value arrays. The\nfirst element in the array must be a description of the data as a string. The\nsecond element must be an array of additional tags (beyond those included in\ndummy data's the tag path). This array can be empty, but it must be present.\nThe third element of the array is the actual dummy data value.\n\nThe various functions for returning the dummy data query this data structure\nbased on both types and tags.\n\nThis datastructure should only be augmented with generic dummy data that is\nrelevant generally. Project-specific dummy data should be provided separately by\npassing one or more data generators to the `refreshDummyData()` function.",
    "static": true,
    "access": "public"
  }
]